"use strict";angular.module("runewordsApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/runewords",{templateUrl:"views/runewords.html",controller:"RunewordsCtrl",controllerAs:"runewords"}).otherwise({redirectTo:"/"})}]),angular.module("runewordsApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("runewordsApp").controller("RunewordsCtrl",["RunewordsAPI",function(a,b){var c=this;c.name="Runewords",c.currentId=null,c.all=a.get(),c.isSelected=function(a){return c.currentId===a},c.selectId=function(a){return c.currentId=a},c.clearId=function(){return c.currentId=null}}]);var apiBaseUrl="http://runewords-api.herokuapp.com/api/v1/";angular.module("runewordsApp").factory("RunewordsAPI",["$resource",function(a){return a(apiBaseUrl+"runewords")}]),angular.module("runewordsApp").run(["$templateCache",function(a){a.put("views/main.html",'<div class="jumbotron"> <div class="container"> <h1>Diablo II Runewords</h1> <p class="lead"> </p><p><a class="btn btn-lg btn-success" ng-href="#/runewords">Get Started!</a></p> </div> </div> <div class="container"> <div class="row marketing"> <h4>Runewords</h4> <p> Once a socketed item has been filled with the correct runes in the correct order, you get a Runeword. </p> <h4>Runes</h4> <p> Runes bestow properties onto socketed items. A rune fills these sockets and is not easily removed. </p> <h4>Properties</h4> <p> Properties add immense power to items in Diablo II. They are (almost) always beneficial and can make the difference between a good item and a great item. </p> <h4>Items</h4> <p>For an item to become a runeword it must have the correct amount of sockets and be the correct type of item.</p> </div> </div>'),a.put("views/runewords.html",'<div class="container"> <div class="klass-page"> <div class="klass-title"> <h1>Runewords</h1> <h2>{{ runewords.name }}</h2> </div> <div> <p class="klass-description">When certain runes are placed in the correct order into socketed items, they can make Runewords.</p> </div> <div class="klass-list"> <ul class="klass-listing col-md-12"> <li class="klass-list-item col-md-offset-1 col-md-5" ng-repeat="runeword in runewords.all[\'runewords\']"> <h5>Runeword name: {{ runeword["name"] }}</h5> <p>Item Types:</p> <ul ng-repeat="item in runeword[\'item_types\']"> <li>{{ item.name }}</li> </ul> <div ng-mouseenter="runewords.selectId(runeword.id)" ng-mouseleave="runewords.clearId()"> <h5 ng-hide="runewords.isSelected(runeword.id)">Runeword runes:</h5> <ul ng-hide="runewords.isSelected(runeword.id)" ng-repeat="rune in runeword.runes"> <li>{{ rune.name }}</li> </ul> <h5 ng-show="runewords.isSelected(runeword.id)">Runeword properties:</h5> <ul ng-show="runewords.isSelected(runeword.id)" ng-repeat="prop in runeword.properties"> <li>{{ prop.name }}</li> </ul> </div> </li></ul></div>   </div> </div> ')}]);